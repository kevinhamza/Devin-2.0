# Devin/.gitignore/.gitignore.prod (Conceptual - LIKELY REDUNDANT)
# Purpose: Specifies files/folders to ignore specifically in a production environment.

# =========================================================================
# IMPORTANT NOTE ON STANDARD PRACTICE:
# =========================================================================
# Git typically uses a single `.gitignore` file (or files within specific subdirectories)
# to define ignore patterns across all environments. Environment-specific differences
# are usually handled via configuration files or build processes, not separate
# .gitignore files for dev/prod/test.
#
# Files ignored in development (like .venv, .env, .pytest_cache, *.pyc, IDE folders)
# should already be covered by the main .gitignore and generally wouldn't exist
# in a clean production checkout or container anyway.
#
# Production build artifacts (e.g., in dist/, build/) should also be covered
# by the main .gitignore.
#
# Therefore, a separate `.gitignore.prod` file is usually unnecessary.
# This file is included conceptually based on the provided tree structure,
# but should likely be removed or left empty in a refactored project.
# =========================================================================

# No specific production-only ignore patterns are typically needed if the main
# .gitignore is comprehensive. Add patterns here ONLY if there are files
# generated *uniquely* during the production runtime process that should
# *never* be accidentally committed from a production server checkout (which
# itself is often an anti-pattern - prefer deploying artifacts, not the repo).
