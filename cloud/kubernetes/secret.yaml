# Devin/cloud/kubernetes/secret.yaml
# Purpose: Stores sensitive configuration data required by Devin components.

apiVersion: v1
kind: Secret
metadata:
  # Name of the Secret object - should match names referenced in Deployment env vars (e.g., secretKeyRef.name)
  name: devin-secrets # Example name referenced in previous deployment.yaml
  # Namespace where this Secret should reside
  namespace: devin-prod # Example namespace, should match Deployment/Service namespace
  labels:
    # Optional labels for the Secret itself
    app.kubernetes.io/name: devin
    app.kubernetes.io/component: secrets
metadata: # Metadata ends here

# Type of Secret. 'Opaque' is default for arbitrary key-value pairs.
# Other types include 'kubernetes.io/tls' for TLS certs, 'kubernetes.io/dockerconfigjson' for registry creds.
type: Opaque

# Use stringData for easier definition of secrets as plain strings.
# Kubernetes automatically base64 encodes these when creating the Secret object.
# DO NOT PUT REAL SECRETS HERE IN YOUR GIT REPO. Use placeholders or references.
stringData:
  # --- Database Credentials ---
  # Example: Use a full connection string or individual components
  DATABASE_URL: "postgresql://devin_user:VERY_SECRET_PASSWORD_REPLACE_ME@devin-db-service.devin-prod.svc.cluster.local:5432/devindb"
  # Or:
  # DB_USER: "devin_user"
  # DB_PASSWORD: "VERY_SECRET_PASSWORD_REPLACE_ME"

  # --- API Gateway / Internal Auth ---
  API_JWT_SECRET_KEY: "dummy_long_random_unpredictable_secret_key_for_jwt_replace_me_1234567890" # Use a securely generated random string

  # --- External AI Service API Keys ---
  # Load these securely, e.g., from a dedicated secrets manager or CI/CD variables
  OPENAI_API_KEY: "sk-dummyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPLACEHOLDER"
  GOOGLE_API_KEY: "AIzaSyDummYxxxxxxxxxxxxxxxxxxxxxxxxxxxPLACEHOLDER" # For Google AI Studio (Gemini)
  PERPLEXITY_API_KEY: "pplx-dummyxxxxxxxxxxxxxxxxxxxxxxxxPLACEHOLDER"
  # Add other API keys as needed (hypothetical PentestGPT, AWS, GCP service keys if not using roles/ADC, etc.)
  # PENTESTGPT_API_KEY: "dummy-pentestgpt-key-placeholder"

  # --- Other Sensitive Settings ---
  # Example: Secret salt for hashing user data
  # HASHING_SALT: "another_super_secret_random_string_replace_me"

  # Example: Credentials for accessing a private code repository if needed during runtime
  # PRIVATE_REPO_PAT: "ghp_dummy_personal_access_token_replace_me"

# --- End of Secret Definition ---
